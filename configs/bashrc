# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions
#=================================================================
# Add '~/.locl/bin' to '$PATH'
export PATH=$PATH:$HOME/.local/bin:.scripts

#=================================================================
# Byobu prompt
[ -r $HOME/.byobu/prompt ] && . $HOME/.byobu/prompt #byobu-prompt#

#=================================================================
# Starship prompt
eval "$(starship init bash)"

#=================================================================
# fzf
eval "$(fzf --bash)"

#=================================================================
# my aliases

# GIT related
alias gs="git status"
alias gcmt="git commit -s -S "
alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias grba="git rebase -S -i --autosquash "
alias gca="git commit --amend --no-edit -S "
alias grbm="git rebase -S -i"

function gcm() {
    git checkout $(git symbolic-ref refs/remotes/origin/HEAD | cut -d/ -f4)
}

function gpum() {
    git pull --ff upstream $(git branch --show-current)
}

function gpom() {
    git pull --ff origin $(git branch --show-current)
}

#=================================================================
# General aliases

alias copy='xclip -select c'

#=================================================================
# Setting golang envs

export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export PATH=$PATH:$GOBIN:/usr/local/go/bin
# for golang that is installed in $HOME/.local/bin/go
export PATH=$PATH:$GOBIN:$HOME/.local/bin/go/bin
export CDPATH=.:$GOPATH/src/github.com:$GOPATH/src
export GO111MODULE=on

#=================================================================
# All Kubernetes related stuff

# k8s alias
which kubecolor >/dev/null 2>&1 && alias kubectl="kubecolor"
alias k=kubectl
alias kg="kubectl get"
alias kgp="kubectl get pods"
alias kgs="kubectl get services"
alias kge="kubectl get events"
alias kgpvc="kubectl get pvc"
alias kgpv="kubectl get pv"
alias kd="kubectl describe"
alias kl="kubectl logs -f"
alias kc="kubectl create -f"

# find what the current namespace on the cluster is
function current-ns() {
    kubectl get sa default -o jsonpath='{.metadata.namespace}'
    echo
}

# changing namespace
function change-ns() {
    namespace=$1
    if [ -z $namespace ]; then
        echo "Please provide the namespace name: 'change-ns mywebapp'"
        return 1
    fi

    kubectl config set-context $(kubectl config current-context) --namespace $namespace
}

which kubectl >/dev/null 2>&1
if [ $? -eq 0 ]; then
    source <(kubectl completion bash)
    source <(kubectl completion bash | sed 's/kubectl/k/g')
fi

which helm >/dev/null 2>&1
if [ $? -eq 0 ]; then
    source <(helm completion bash)
fi

which operator-sdk >/dev/null 2>&1
if [ $? -eq 0 ]; then
    source <(operator-sdk completion bash)
fi

which kubeadm >/dev/null 2>&1
if [ $? -eq 0 ]; then
    source <(kubeadm completion bash)
fi

which gh >/dev/null 2>&1
if [ $? -eq 0 ]; then
    eval "$(gh completion -s bash)"
fi

# Add krew to the PATH
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
#=================================================================
# Aliases of favourite bash commands with new tools

# Use aliases in watch command
alias watch='watch '

# this is not default on distro not centos/fedora based
alias ll="ls -l"
which eza >/dev/null 2>&1
if [ $? -eq 0 ]; then
    alias ll="eza -F -l"
    alias ls="eza"
fi

which rg >/dev/null 2>&1
if [ $? -eq 0 ]; then
    alias grep="rg"
fi

#=================================================================
# To get around the problem in fedora and vscode
# More info: https://github.com/Microsoft/vscode/issues/48480#issuecomment-414100718
export GTK_IM_MODULE=ibus

#=================================================================
# npm related stuff

NPM_PACKAGES="${HOME}/.npm-packages"
PATH="$NPM_PACKAGES/bin:$PATH"

# Unset manpath so we can inherit from /etc/manpath via the `manpath` command
unset MANPATH # delete if you already modified MANPATH elsewhere in your config
export MANPATH="$NPM_PACKAGES/share/man:$(manpath)"

#=================================================================
# GPG version
export GPG=gpg2
export GPG_TTY=$(tty)

#=================================================================
# Vault bash completion
complete -C $HOME/.local/bin/vault vault

#=================================================================
# ssh aliases
alias ssh="ssh -oStrictHostKeyChecking=no"

#=================================================================
# Default editor
export EDITOR=vim

#=================================================================
# WSL related stuff

# Define a function only if the env var WSL_DISTRO_NAME is set
if [ -n "$WSL_DISTRO_NAME" ]; then
    # Define a function to open a file or a URL.
    function open() {
        if [[ $1 == http* ]]; then
            explorer.exe $1
        else
            explorer.exe "$(wslpath -w $1)"
        fi
    }
fi
#=================================================================
# A terminal browser
function browser() {
    local command="docker run --rm -it --net=host browsh/browsh"
    echo "$ ${command}"
    $command
}

#=================================================================
# Homebrew related env vars
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
