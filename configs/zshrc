# Add the dir ~/.local/bin and ~/go/bin to the PATH.
# First is used to download random binaries, custom scripts, etc.
# Second contains the binaries built by local go code.
# And the final is used by homebrew
export PATH=$HOME/.local/bin:$HOME/go/bin:/opt/homebrew/bin:/opt/homebrew/sbin:$PATH

#=================================================================
# Oh my zsh config
# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    zsh-completions
)

source $ZSH/oh-my-zsh.sh

unsetopt inc_append_history
unsetopt share_history

#=================================================================
# Starship prompt
eval "$(starship init zsh)"

#=================================================================
# fzf
source <(fzf --zsh)

#=================================================================
# my aliases

# GIT related
alias gs="git status"
alias gcmt="git commit -s -S "
alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias grba="git rebase -S -i --autosquash "
alias gca="git commit --amend --no-edit -S "
alias grbm="git rebase -S -i"

function gcm() {
    git checkout $(git symbolic-ref refs/remotes/origin/HEAD | cut -d/ -f4)
}

function gpum() {
    git pull --ff upstream $(git branch --show-current)
}

function gpom() {
    git pull --ff origin $(git branch --show-current)
}

#=================================================================
# All Kubernetes related stuff

# k8s alias
which kubectl >/dev/null 2>&1 && {
    source <(kubectl completion zsh)
    source <(kubectl completion zsh | sed 's/kubectl/k/g')
}

which kubecolor >/dev/null 2>&1 && {
    compdef kubecolor=kubectl
    alias kubectl='kubecolor'
}

alias k=kubectl
alias kg="kubectl get"
alias kgp="kubectl get pods"
alias kgs="kubectl get services"
alias kge="kubectl get events"
alias kgpvc="kubectl get pvc"
alias kgpv="kubectl get pv"
alias kd="kubectl describe"
alias kl="kubectl logs -f"
alias kc="kubectl create -f"

# find what the current namespace on the cluster is
function current-ns() {
    kubectl get sa default -o jsonpath='{.metadata.namespace}'
    echo
}

# changing namespace
function change-ns() {
    namespace=$1
    if [ -z $namespace ]; then
        echo "Please provide the namespace name: 'change-ns mywebapp'"
        return 1
    fi

    kubectl config set-context $(kubectl config current-context) --namespace $namespace
}

which helm >/dev/null 2>&1
if [ $? -eq 0 ]; then
    source <(helm completion zsh)
fi

which kubeadm >/dev/null 2>&1
if [ $? -eq 0 ]; then
    source <(kubeadm completion zsh)
fi

which gh >/dev/null 2>&1
if [ $? -eq 0 ]; then
    eval "$(gh completion -s zsh)"
fi

which kind >/dev/null 2>&1
if [ $? -eq 0 ]; then
    mkdir -p $ZSH/completions/
    kind completion zsh >$ZSH/completions/_kind
fi

#=================================================================
# Aliases of favourite bash commands with new tools

# Use aliases in watch command
alias watch='watch '

# this is not default on distro not centos/fedora based
alias ll="ls -l"
which eza >/dev/null 2>&1
if [ $? -eq 0 ]; then
    alias ll="eza -F -l"
    alias ls="eza"
fi

which rg >/dev/null 2>&1
if [ $? -eq 0 ]; then
    alias grep="rg"
fi

#=================================================================
# GPG
export GPG_TTY=$(tty)
gpgconf --launch gpg-agent

#=================================================================
# ssh aliases
alias ssh="ssh -oStrictHostKeyChecking=no"

#=================================================================
# missing osx commands aliases
alias sha256sum="shasum -a 256"

#=================================================================
# Azure CLI completion
# Figure out a better location to place this: https://stackoverflow.com/a/49277309/3848679
_az_python_argcomplete() {
    local IFS=$'\013'
    local SUPPRESS_SPACE=0
    if compopt +o nospace 2>/dev/null; then
        SUPPRESS_SPACE=1
    fi
    COMPREPLY=($(IFS="$IFS" \
        COMP_LINE="$COMP_LINE" \
        COMP_POINT="$COMP_POINT" \
        COMP_TYPE="$COMP_TYPE" \
        _ARGCOMPLETE_COMP_WORDBREAKS="$COMP_WORDBREAKS" \
        _ARGCOMPLETE=1 \
        _ARGCOMPLETE_SUPPRESS_SPACE=$SUPPRESS_SPACE \
        "$1" 8>&1 9>&2 1>/dev/null 2>/dev/null))
    if [[ $? != 0 ]]; then
        unset COMPREPLY
    elif [[ $SUPPRESS_SPACE == 1 ]] && [[ "$COMPREPLY" =~ [=/:]$ ]]; then
        compopt -o nospace
    fi
}
complete -o nospace -o default -o bashdefault -F _az_python_argcomplete "az"

# Add azure auth
export PATH="${PATH}:${HOME}/.azureauth/0.9.2"

# #=================================================================
# This is commented right now because it is slowing down the shell startup!
# # Node and NVM related stuff
# export NVM_DIR="$HOME/.nvm"
# [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"                                       # This loads nvm
# [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion

#===============================================================================
#
# The coreutils package provided by homebrew has newer tools like tr compared to
# what the default OSX ships
export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"

#===============================================================================
# tmux
alias tmux="tmux -CC"
